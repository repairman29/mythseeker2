rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isCampaignMember(campaignId) {
      return exists(/databases/$(database)/documents/campaigns/$(campaignId)/players/$(request.auth.uid));
    }
    
    function isCampaignHost(campaignId) {
      return get(/databases/$(database)/documents/campaigns/$(campaignId)).data.host == request.auth.uid;
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Characters collection
    match /characters/{characterId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
    }

    // Campaigns collection
    match /campaigns/{campaignId} {
      allow read: if isAuthenticated() && 
        (resource.data.isPublic == true || 
         resource.data.host == request.auth.uid || 
         isCampaignMember(campaignId));
      
      allow create: if isAuthenticated() && 
        request.resource.data.host == request.auth.uid;
      
      allow update: if isAuthenticated() && 
        (resource.data.host == request.auth.uid || 
         isCampaignMember(campaignId));
      
      allow delete: if isAuthenticated() && 
        resource.data.host == request.auth.uid;

      // Campaign players subcollection
      match /players/{playerId} {
        allow read, write: if isAuthenticated() && 
          (isCampaignHost(campaignId) || 
           playerId == request.auth.uid);
      }
    }

    // Game messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated() && 
        (isCampaignMember(resource.data.campaignId) || 
         isCampaignHost(resource.data.campaignId));
      
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid &&
        (isCampaignMember(request.resource.data.campaignId) || 
         isCampaignHost(request.resource.data.campaignId));
      
      allow update, delete: if isAuthenticated() && 
        resource.data.senderId == request.auth.uid;
    }

    // AI memory collection (restricted to system)
    match /aiMemory/{memoryId} {
      allow read: if isAuthenticated() && 
        isCampaignMember(resource.data.campaignId);
      // Write access is restricted to Cloud Functions
    }

    // World state collection
    match /worldState/{campaignId} {
      allow read: if isAuthenticated() && 
        isCampaignMember(campaignId);
      
      allow write: if isAuthenticated() && 
        isCampaignHost(campaignId);
    }

    // Achievements collection
    match /achievements/{achievementId} {
      allow read: if isAuthenticated();
      // Write access is restricted to Cloud Functions
    }

    // User achievements subcollection
    match /users/{userId}/achievements/{achievementId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
  }
}
